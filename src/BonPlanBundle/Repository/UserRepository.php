<?php

namespace BonPlanBundle\Repository;

use BonPlanBundle\Entity\User;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{

    public function findProp($nomPlan)
    {
        $q = $this->createQueryBuilder('p')
            ->where('p.nomPlan LIKE :nomPlan')
<<<<<<< HEAD

            ->setParameter(':nomPlan',"%$nomPlan%");
        return $q->getQuery()->getResult();
    }
    public function findPlan($nomPlan)
    {
        $q=$this->createQueryBuilder('p')
            ->where('p.nomPlan LIKE :nomPlan')
<<<<<<< HEAD

            ->setParameter(':nomPlan',"%$nomPlan%");
        return $q->getQuery()->getResult();
    }
    public function restaurant ($id){
        return
            $q=$this->getEntityManager()
                ->createQuery("select count(user) from BonPlanBundle:User user 
                              where user.categorie = :id ")
                ->setParameter('id',$id)

                ->getSingleScalarResult();


    }

    public function findbyCategorie($id)
    {


        $query=$this->getEntityManager()->createQuery(
            "select p from BonPlanBundle:User p JOIN BonPlanBundle:Categorie s where  p.categorie=:id")

            ->setParameter('id',$id);
        return $query->getResult();
    }
    public function findPlan($nomPlan)
    {
        $q=$this->createQueryBuilder('p')
            ->where('p.nomPlan LIKE :nomPlan')
=======
>>>>>>> 1c4d0f271342a3deebb8766ad8e9dbb8d20e4b6e
            ->andWhere('p.validite = 1')
            ->setParameter(':nomPlan',"%$nomPlan%");
        return $q->getQuery()->getResult();
    }
    public function hotel (){
        return $this->createQueryBuilder('user')
            ->select('COUNT(user)')
            ->where('user.categorie LIKE :categorie')
            ->setParameter('categorie', '%hotel%')
            ->getQuery()
            ->getSingleScalarResult();


    }
    public function coffee (){
        return $this->createQueryBuilder('user')
            ->select('COUNT(user)')
            ->where('user.categorie LIKE :categorie')
            ->setParameter('categorie', '%coffee%')
            ->getQuery()
            ->getSingleScalarResult();


    }
    public function culture (){
        return $this->createQueryBuilder('user')
            ->select('COUNT(user)')
            ->where('user.categorie LIKE :categorie')
            ->setParameter('categorie', '%culture%')
            ->getQuery()
            ->getSingleScalarResult();


    }
<<<<<<< HEAD


=======
    public function nightlife (){
        return $this->createQueryBuilder('user')
            ->select('COUNT(user)')
            ->where('user.categorie LIKE :categorie')
            ->setParameter('categorie', '%nightlife%')
            ->getQuery()
            ->getSingleScalarResult();


    }
    public function restaurant (){
        return $this->createQueryBuilder('user')
            ->select('COUNT(user)')
            ->where('user.categorie LIKE :categorie')
            ->setParameter('categorie', '%restaurant%')
            ->getQuery()
            ->getSingleScalarResult();


    }
=======
            ->setParameter(':nomPlan', "%$nomPlan%");
        return $q->getQuery()->getResult();
    }
>>>>>>> 98c1bff408d5bf6b674b2043121740432770b49e
>>>>>>> 1c4d0f271342a3deebb8766ad8e9dbb8d20e4b6e

    public function findRole($role)
    {

        $qb = $this->_em->createQueryBuilder();
        $qb->select('u')
            ->from($this->User, 'u')
            ->where('u.roles LIKE "ROLE_PROP"')
<<<<<<< HEAD
            ->setParameter('roles', '%"'.$role.'"%');
=======
<<<<<<< HEAD
            ->setParameter('roles', '%"'.$role.'"%');
=======
            ->setParameter('roles', '%"' . $role . '"%')
            ->setParameter(':roles', "%$role%");
>>>>>>> 98c1bff408d5bf6b674b2043121740432770b49e
>>>>>>> 1c4d0f271342a3deebb8766ad8e9dbb8d20e4b6e

        return $qb->getQuery()->getResult();
    }

    public function nombrePlan()
    {
        return $this->createQueryBuilder('user')
            ->select('COUNT(user)')
            ->getQuery()
            ->getSingleScalarResult();
    }

    public function findCategorie($role, $categorie)
    {

        $qb = $this->_em->createQueryBuilder();
        $qb->select('u')
            ->from($this->User, 'u')
            ->where('u.roles LIKE "ROLE_PROP"')
            ->andWhere('u.categorie LIKE :categorie')
            ->setParameter('roles', '%"' . $role . '"%')
            ->setParameter(':categorie', "%$categorie%");

        return $qb->getQuery()->getResult();
    }

    public function findGlobale($nomPlan)
    {
        $q = $this->createQueryBuilder('p')
            ->where('p.nomPlan LIKE :nomPlan')
            ->orWhere('p.description LIKE :des')
            ->orWhere('p.codePostal LIKE :cp')
            ->orWhere('p.adresse LIKE :add')
            ->orWhere('p.telephone LIKE :tel')
            ->orWhere('p.ville LIKE :ville')
            ->setParameter(':ville', "%$nomPlan%")
            ->setParameter(':tel', "%$nomPlan%")
            ->setParameter(':nomPlan', "%$nomPlan%")
            ->setParameter(':add', "%$nomPlan%")
            ->setParameter(':cp', "%$nomPlan%")
            ->setParameter(':des', "%$nomPlan%");
        return $q->getQuery()->getResult();
    }
    public function findByProp()
    {
        $query = $this->getEntityManager()
            ->createQuery('SELECT u FROM BonPlanBundle:User u WHERE u.roles LIKE :role')
        ->setParameter('role', '%"ROLE_PROP"%');

        return $query->getResult();
    }

    public function findById($id)
    {
        $q = $this->getEntityManager()
            ->createQuery('SELECT u FROM BonPlanBundle:User u WHERE u.id = :iduser')
            ->setParameter(':iduser',$id);


        return $q->getResult();

    }
<<<<<<< HEAD
=======

>>>>>>> 1c4d0f271342a3deebb8766ad8e9dbb8d20e4b6e
    function findid($userPlan){

        $query=$this->getEntityManager()
            ->createQuery("select r from BonPlanBundle:USER r  where r.username LIKE :plan ")
            ->setParameter('plan','%'.$userPlan.'%');

        return $query->getResult();
<<<<<<< HEAD
=======
    }
    function nombreVisiteur()
    {
        $query=$this->getEntityManager()->createQuery("Select count(v) FROM BonPlanBundle:USER v WHERE v.roles like'a:1:{i:0;s:13:\"ROLE_VISITEUR\";}%'");
        return $query->getSingleScalarResult();
>>>>>>> 1c4d0f271342a3deebb8766ad8e9dbb8d20e4b6e
    }

    function nombreVisiteur()
    {
        $query=$this->getEntityManager()->createQuery("Select count(v) FROM BonPlanBundle:USER v WHERE v.roles like'a:1:{i:0;s:13:\"ROLE_VISITEUR\";}%'");
        return $query->getSingleScalarResult();
    }


}
